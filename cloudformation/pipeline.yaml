Description: Ice Infrastructure Pipeline
Parameters:
  StackName:
    Description: The full AWS environment and application name that will be prefixed to resource names
    Type: String
  Environment:
    Description: Environment Name
    Type: String
  CloudformationBucket:
    Description: Cloudformation Bucket Name
    Type: String
  RepositoryName:
    Type: String
  BranchName:
    Type: String
    Default: master
  ClassB:
    Type: String
  Path:
    Type: String
  Image:
    Type: String

Resources:
  ArtifactsBucket:
    DependsOn: CloudFormationRole
    DeletionPolicy: Delete
    UpdateReplacePolicy: Retain
    Type: AWS::S3::Bucket

  PipelineRole:
    DependsOn: CloudFormationRole
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "codepipeline.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AdministratorAccess"
  CloudFormationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "cloudformation.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AdministratorAccess"
  CodeBuildRole:
    DependsOn: CloudFormationRole
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: ServiceRole
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: CloudWatchLogsPolicy
                Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "*"
              - Sid: CodeCommitPolicy
                Effect: Allow
                Action: "codecommit:GitPull"
                Resource: "*"
              - Sid: S3GetObjectPolicy
                Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:List*"
                  - "s3:Delete*"
                Resource: "*"
              - Sid: S3PutObjectPolicy
                Effect: "Allow"
                Action: "s3:PutObject"
                Resource: "*"
              - Sid: ECR
                Effect: "Allow"
                Action: "ecr:GetAuthorizationToken"
                Resource: "*"
              - Sid: KMS
                Effect: "Allow"
                Action:
                  - "kms:Get*"
                  - "kms:List*"
                  - "kms:GenerateDataKey"
                  - "kms:Decrypt"
                  - "kms:Encrypt"
                  - "kms:ReEncrypt*"
                  - "kms:DescribeKey"
                Resource: "*"
              - Sid: SSM
                Effect: "Allow"
                Action:
                  - "ssm:Get*"
                  - "ssm:Describe*"
                  - "ssm:List*"
                  - "ssm:PutConfigurePackageResult"
                Resource: "*"
              - Sid: Cloudformation
                Effect: "Allow"
                Action:
                  - "cloudformation:DescribeStacks"
                  - "cloudformation:ValidateTemplate"
                Resource: "*"
              - Sid: codebuild
                Effect: "Allow"
                Action:
                  - "codebuild:UpdateProject"
                Resource: "*"
              - Sid: ec2
                Effect: "Allow"
                Action:
                  - "ec2:*"
                Resource: "*"
              - Sid: cloudsearch
                Effect: "Allow"
                Action:
                  - "cloudsearch:CreateDomain"
                Resource: "*"

  CDWCloudformation:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: !Ref Image
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: Environment
            Value: !Sub ${Environment}
          - Name: CloudformationBucket
            Value: !Sub ${CloudformationBucket}
          - Name: Path
            Value: !Sub ${Path}
          - Name: StackName
            Value: !Sub ${StackName}
      Description: !Sub ${StackName}:${Environment}
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: config/buildspec.yml
      TimeoutInMinutes: 10

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactsBucket
      RestartExecutionOnUpdate: true
      RoleArn: !GetAtt PipelineRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: FetchSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: "1"
              Configuration:
                RepositoryName: !Ref RepositoryName
                BranchName: !Ref BranchName
              OutputArtifacts:
                - Name: Source
              RunOrder: 1

        - Name: Build
          Actions:
            - Name: Cloudformation
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              Configuration:
                ProjectName: !Ref CDWCloudformation
              InputArtifacts:
                - Name: Source
              OutputArtifacts:
                - Name: Cloudformation
              RunOrder: 1

        - Name: Level1
          Actions:
            - Name: vpc
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: "1"
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_IAM
                RoleArn: !GetAtt CloudFormationRole.Arn
                StackName: !Sub ${AWS::StackName}-vpc
                TemplatePath: Cloudformation::vpc-2azs.yaml
                ParameterOverrides: !Sub '{"ClassB": "${ClassB}"}'
              InputArtifacts:
                - Name: Cloudformation
              RunOrder: 1
